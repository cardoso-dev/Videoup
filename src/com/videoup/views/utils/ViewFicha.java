/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.videoup.views.utils;

import com.videoup.controllers.Controller;
import com.videoup.entities.VideoupBaseEntity;
import com.videoup.entities.VideoupLangs;
import com.videoup.utils.Validator;
import java.awt.BorderLayout;
import java.awt.Component;
import java.util.List;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingWorker;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Pedro
 */
public class ViewFicha extends View implements DocumentListener{

    protected Validator vltor;
    protected Component mainCnt;
    
    /**
     * Creates new form ViewFicha
     */
    public ViewFicha(Controller ctrl, int id, boolean loadEnt) {
        super(ctrl,id);
        initComponents();
        initComps();
        if(id>0 && loadEnt){
            loadEntity(id);
        }
    }
    
    protected void loadEntity(int id){
        System.out.println("Load id "+id);
    }
    
    private void initComps(){
        lblTitle.setText(getTitle());
    }

    protected void removeObtnNew(){
        pnlNorth.remove(btnNew);
        btnNew=null;
    }

    protected void removeObtnSave(){
        pnlNorth.remove(btnSave);
        btnSave=null;
    }
    
    protected void setUpValidator(){
        vltor=new Validator();
    }
    
    protected void putMainContain(Component comp){
        mainCnt=comp;
        removeAll();
        add(comp,BorderLayout.CENTER);
        add(pnlNorth,BorderLayout.NORTH);   
        validate();
    }

    protected void updateIdTitle(){
    }
    
    public void deleteLang(VideoupLangs l){
    }
    
    public void setGettedImage(byte[] img, int key){
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jxBusyLbl = new org.jdesktop.swingx.JXBusyLabel();
        pnlNorth = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        btnList = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        jxBusyLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jxBusyLbl.setText("jXBusyLabel1");
        jxBusyLbl.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N

        setLayout(new java.awt.BorderLayout());

        pnlNorth.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.lightGray));
        pnlNorth.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 6, 3));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitle.setText("Title");
        pnlNorth.add(lblTitle);

        btnList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/videoup/imgs/menu.png"))); // NOI18N
        btnList.setToolTipText("Vistas abiertas");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });
        pnlNorth.add(btnList);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/videoup/imgs/save.png"))); // NOI18N
        btnSave.setToolTipText("Guardar registro");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlNorth.add(btnSave);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/videoup/imgs/nuevo.png"))); // NOI18N
        btnNew.setToolTipText("Nuevo registro");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        pnlNorth.add(btnNew);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/videoup/imgs/close.png"))); // NOI18N
        btnClose.setToolTipText("Cerrar ficha");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        pnlNorth.add(btnClose);

        add(pnlNorth, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        closeMe();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        ctrl.loadNewFicha();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        store();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        ctrl.goToViewsSel();
    }//GEN-LAST:event_btnListActionPerformed

    protected boolean saveCustom(VideoupBaseEntity entity, boolean asNew){
        error="Not implemented saveCustom or must call super.saveEntity";
        return false;
    }
    
    protected boolean saveEntity(VideoupBaseEntity entity,boolean forceAsNew){
        boolean saveok=genDAO.saveEntity(entity,forceAsNew);
        if(!saveok){
            error=genDAO.getError();
        }else{
            error=null;
        }
        return saveok;
    }
    
    protected boolean deleteEntities(List<VideoupBaseEntity> entities){
        boolean saveok=genDAO.deleteEntities(entities);
        if(!saveok){
            error=genDAO.getError();
        }else{
            error=null;
        }
        return saveok;
    }
    
    protected boolean deleteEntity(VideoupBaseEntity entity){
        boolean deleted=genDAO.deleteEntity(entity);
        if(!deleted){
            error=genDAO.getError();
        }else{
            error=null;
        }
        return deleted;
    }
    
    protected boolean makeAClone(VideoupBaseEntity ent,VideoupBaseEntity img){
        error="Not implemented cloneRecord";
        return false;
    }
    
    protected boolean isDataValid(){
        boolean vltd;
        if(vltor!=null){
            vltd=vltor.validate();
            if(!vltd){
                setError(vltor.getError());
                return false;
            }else{
                return true;
            }
        }
        System.out.println("implement method to valid my data or setup vltor on init()");
        return false;
    }
    
    protected void store(){
        PerformingTask task=new PerformingTask();
        setBusy("Guardando registro",true);
        task.setTask(1); task.setParam(null,false);
        validate(); task.execute();
    }
        
    public void loadEntity(Object ent){
        error="No implementado carga registro MOD "+getTitle();
        ctrl.showDialogErr(error);
    }
    
    protected void setBusy(String mss, boolean busy){
        this.setVisible(false);
        if(busy){
            remove(mainCnt);
            remove(pnlNorth);
            add(jxBusyLbl,BorderLayout.CENTER);
            jxBusyLbl.setText(mss);
            jxBusyLbl.setBusy(true);
        }else{
            jxBusyLbl.setBusy(false);
            remove(jxBusyLbl);
            add(mainCnt,BorderLayout.CENTER);
            add(pnlNorth,BorderLayout.NORTH);
        }
        this.setVisible(true);
    }
    
    protected void addJText2ListenChanges(JTextField jtf){
        jtf.getDocument().addDocumentListener(this);
    }
    
    protected void addJText2ListenChanges(JTextArea jta){
        jta.getDocument().addDocumentListener(this);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private org.jdesktop.swingx.JXBusyLabel jxBusyLbl;
    protected javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlNorth;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insertUpdate(DocumentEvent e) {
        changes=true;
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        changes=true;
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        changes=true;
    }

    public class PerformingTask extends SwingWorker<Boolean, Void>{
        private int task; 
        private boolean forceAsNew;
        // 1=save main entity, 2=save custom entity (not validation), 3=delete entity, 
        // 4=save custom entities list, 5=delete custom entities list, 6=clone record
        private VideoupBaseEntity cParam;
        private List<VideoupBaseEntity> lstParam;
        private VideoupBaseEntity clon2;
        private boolean showDialog;

        public PerformingTask(){
            showDialog=true;
        }
        public void setShowDialog(boolean showDialog) {
            this.showDialog = showDialog;
        }        
        public void setTask(int t){ task=t; }
        public void setParam(VideoupBaseEntity p, boolean asNew){ cParam=p; forceAsNew=asNew; }
        public void setClon2(VideoupBaseEntity clon){ clon2=clon; }
        public void setListParam(List<VideoupBaseEntity> l){ lstParam=l; }
        @Override
        protected Boolean doInBackground() throws Exception{
            boolean result=true;
            if(task==1){
                if(!isDataValid()){
                    if(showDialog){ ctrl.showDialogErr(getError()); }
                    result=false;
                }else if(saveEntity(cParam,forceAsNew)){
                    if(showDialog){ ctrl.showDialogInf("Accion completada","El registro se ha guardado"); }
                    updateIdTitle();
                }else{
                    if(showDialog){ ctrl.showDialogErr(error); }
                    result=false;
                }
            }else if(task==2){
                if(!saveCustom(cParam,forceAsNew)){
                    if(showDialog){ ctrl.showDialogErr(error); }
                    result=false;
                }
            }else if(task==3){
                if(!deleteEntity(cParam)){
                    if(showDialog){ ctrl.showDialogErr(error); }
                    result=false;
                }
            }else if(task==4){
                if(!saveEntities(lstParam)){
                    if(showDialog){ ctrl.showDialogErr(error); }
                    result=false;
                }
            }else if(task==5){
                if(!deleteEntities(lstParam)){
                    if(showDialog){ ctrl.showDialogErr(error); }
                    result=false;
                }
            }else if(task==6){
                if(!makeAClone(cParam,clon2)){
                    if(showDialog){ ctrl.showDialogErr(error); }
                    result=false;
                }
            }
            return result;
        }
        @Override
        protected void done(){
            setBusy("....",false); validate();
        }
    }
}

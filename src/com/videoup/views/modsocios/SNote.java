/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.videoup.views.modsocios;

import com.videoup.controllers.Controller;
import com.videoup.entities.VideoupCstmrnotes;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Pedro
 */
public class SNote extends javax.swing.JPanel implements DocumentListener {

    private VideoupCstmrnotes note;
    private Ficha fich;
    private Controller ctrl;
    private boolean changes;
    
    /**
     * Creates new form SNote
     */
    public SNote(VideoupCstmrnotes note, Ficha fich, Controller ctrl) {
        initComponents();
        this.note=note;
        this.fich=fich;
        this.ctrl=ctrl;
        initComponents();
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/videoup/imgs/save.png")));
        txtNota.getDocument().addDocumentListener(this);
        showData();
        changes=false;
    }
        
    private void showData(){
        DateFormat dtf=DateFormat.getDateInstance(DateFormat.FULL);
        lblFecha.setText("Ultima edici√≥n: "+dtf.format(note.getFecha()));
        txtNota.setText(note.getNote());
        if(note.getNtype()!=null){
            jcbType.setSelectedIndex(note.getNtype());
        }
    }

    public boolean hasChanges(){
        return changes;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnDel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblFecha = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jcbType = new javax.swing.JComboBox();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNota = new javax.swing.JTextArea();

        setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        btnDel.setText("X");
        btnDel.setToolTipText("Eliminar nota");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jPanel1.add(btnDel, java.awt.BorderLayout.EAST);

        lblFecha.setText(" Fecha de creacion/ultima edicion");
        jPanel2.add(lblFecha);

        jLabel1.setText("Tipo de nota:");
        jPanel2.add(jLabel1);

        jcbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Neutral", "Negativa", "Advertencia", "Positiva" }));
        jcbType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbTypeItemStateChanged(evt);
            }
        });
        jPanel2.add(jcbType);

        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdate);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        txtNota.setColumns(20);
        txtNota.setRows(5);
        jScrollPane1.setViewportView(txtNota);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String texto=txtNota.getText().trim();
        Date today= Calendar.getInstance().getTime();
        if(texto.length()==0){
            ctrl.showDialogErr("No puede guardar una nota sin texto");
            return;
        }
        note.setNote(texto);
        note.setFecha(today);
        note.setNtype(jcbType.getSelectedIndex());
        changes=!fich.updateChildEntity(note);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        fich.deleteChildEntity(note,3);
    }//GEN-LAST:event_btnDelActionPerformed

    private void jcbTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbTypeItemStateChanged
        changes=true;
    }//GEN-LAST:event_jcbTypeItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcbType;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JTextArea txtNota;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insertUpdate(DocumentEvent e) {
        changes=true;
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        changes=true;
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        changes=true;
    }
}

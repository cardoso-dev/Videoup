/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.videoup.views.modsocios;

import com.videoup.controllers.Controller;
import com.videoup.entities.VideoupDocs;
import com.videoup.views.utils.ImagePanel;
import com.videoup.views.utils.PrintDiag;
import java.awt.BorderLayout;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Pedro
 */
public class SDocument extends javax.swing.JPanel implements DocumentListener{

    private VideoupDocs ent;
    private Ficha fich;
    private Controller ctrl;
    private boolean changes;
    
    /**
     * Creates new form SDocument
     */
    public SDocument(VideoupDocs ent, Ficha fich, Controller ctrl){
        this.ent=ent;
        this.fich=fich;
        this.ctrl=ctrl;
        initComponents();
        txtNameDoc.getDocument().addDocumentListener(this);
        ShowData();
        changes=false;
    }
    
    private void ShowData(){
        InputStream inpstr=new ByteArrayInputStream(ent.getDocimg());
        ImagePanel imgp;
        BufferedImage bfImg;
        try {
            bfImg=ImageIO.read(inpstr);
            imgp=new ImagePanel(bfImg);
            pnlImageView.add(imgp,BorderLayout.CENTER);
        }catch(IOException ex){
            lblError.setText("Error: "+ex.getMessage());
            pnlImageView.add(lblError,BorderLayout.CENTER);
        }
        txtNameDoc.setText(ent.getDocname());
    }

    public boolean hasChanges(){
        return changes;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblError = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtNameDoc = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnDel = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlImageView = new javax.swing.JPanel();

        lblError.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblError.setForeground(new java.awt.Color(165, 0, 0));
        lblError.setText("Error:");

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());
        jPanel1.add(txtNameDoc, java.awt.BorderLayout.CENTER);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/videoup/imgs/save.png"))); // NOI18N
        btnUpdate.setToolTipText("Guardar nombre del documento");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, java.awt.BorderLayout.LINE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/videoup/imgs/trash.png"))); // NOI18N
        btnDel.setToolTipText("Eliminar documento");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jPanel2.add(btnDel, java.awt.BorderLayout.EAST);

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/videoup/imgs/print.png"))); // NOI18N
        btnPrint.setToolTipText("Imprimir documento");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel2.add(btnPrint, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.EAST);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pnlImageView.setLayout(new java.awt.BorderLayout());
        jScrollPane1.setViewportView(pnlImageView);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String updName=txtNameDoc.getText().trim();
        if(updName.length()<7 || updName.length()>255){
            ctrl.showDialogErr("El nombre debe tener una longitud entre 7 y 155 caracteres");
            return;
        }
        ent.setDocname(updName);
        changes=!fich.updateChildEntity(ent);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        fich.deleteChildEntity(ent,2);
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        PrintDiag pDiag;
        Map<String,Object> prms;
        if(ent.getId()==null || ent.getId()==0){
            ctrl.showDialogErr("No puede imprimir contrato en un registro sin guardar");
            return;
        }
        prms=getParams();
        if(prms==null){ return; }
        pDiag=new PrintDiag(fich.getMainWindow(),true,"Documento "+ent.getDocname());
        pDiag.cargaReporte(prms,null,3);
        pDiag.setVisible(true);
    }//GEN-LAST:event_btnPrintActionPerformed

    private Map<String,Object> getParams(){
        Map<String,Object> parametros = new HashMap<String,Object>();
        InputStream inpstr=new ByteArrayInputStream(ent.getDocimg());
        try {
            parametros.put("image",inpstr);
        }catch(Exception ex){
            fich.showError("Error: "+ex.getMessage());
            return null;
        }
        return parametros;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblError;
    private javax.swing.JPanel pnlImageView;
    private javax.swing.JTextField txtNameDoc;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insertUpdate(DocumentEvent e) {
        changes=true;
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        changes=true;
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        changes=true;
    }
    
}
